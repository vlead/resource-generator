#+TITLE: The REST API
#+AUTHOR: VLEAD
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document illustrates building of REST API for the resource-generator.

* REST
** Blueprint
#+NAME: blueprint
#+BEGIN_SRC python
api = Blueprint('APIs', __name__)

#+END_SRC

** index route
   This route redirects to the index.org of the documentation.
#+NAME: index_route
#+BEGIN_SRC python
@api.route("/", methods=['GET'])
def index():
    return """<h1>Resource-Generator Running Dum"</h1>
<a href="https://github.com/vlead/resource-generator">https://github.com/vlead/resource-generator</a>    

#+END_SRC

** =/resource= API
   This API creates the resource from the content and then pushes it to the content-server.
   
*** API design
    
    - URL :: /resource
    - METHOD :: POST
    - PAYLOAD ::
         #+BEGIN_EXAMPLE
         'https://github.com/test-platform-to-to-deleted/Parallel-and-distributed-processing-e000121'
         #+END_EXAMPLE
    - SUCCESS Response :: 200 OK
    - ERROR Response :: 400

*** API
#+NAME: create_experiment_route
#+BEGIN_SRC python
@api.route("/resource", methods=['POST'])
def resource():
    if request.method == 'POST':
        try:
            url = request.form['url']
            SystemInterface.build_resource(url)
            return make_response("success: OK", 200, None)
        except Exception as e:
            return make_response(str(e), 400, None)
#+END_SRC

* Imports
#+NAME: imports_api
#+BEGIN_SRC python
from flask import Blueprint, session, request, make_response, \
    jsonify, url_for, abort
from runtime.system.system_interface import *

#+END_SRC

* Tangle
#+BEGIN_SRC python :tangle api.py :eval no :noweb yes
<<imports_api>>
<<blueprint>>
<<index_route>>
<<create_experiment_route>>
#+END_SRC
