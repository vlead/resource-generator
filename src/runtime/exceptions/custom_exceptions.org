#+TITLE: Custom Exceptions
#+AUTHOR: VLEAD
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

All custom exceptions needed by the application are defined here.

* Custom Exceptions

  These are some of the custom exceptions used in the application.

*** AttributeRequired

#+name: class_AttributeRequired
#+BEGIN_SRC python
class AttributeRequired(Exception):
    str = None

    def __init__(self, str):
        self.str = str

    def __str__(self):
        return repr(self.str)

#+END_SRC


*** Constraint Error
#+name: class_ConstraintError
#+BEGIN_SRC python
class ConstraintError(Exception):
    str = None

    def __init__(self, str):
        self.str = str

    def __str__(self):
        return repr(self.str)

#+END_SRC


*** NotAuthorized Error
#+name: class_NotAuthorizedError
#+BEGIN_SRC python
class NotAuthorizedError(Exception):
    str = None

    def __init__(self, str):
        self.str = str

    def __str__(self):
        return repr(self.str)

#+END_SRC


*** ArityError
#+name: class_ArityError
#+BEGIN_SRC python
class ArityError(Exception):
    str = None

    def __init__(self, str):
        self.str = str

    def __str__(self):
        return repr(self.str)

#+END_SRC



*** State Error
#+name: class_StateError
#+BEGIN_SRC python
class StateError(Exception):
    str = None

    def __init__(self, str):
        self.str = str

    def __str__(self):
        return repr(self.str)

#+END_SRC


*** NotFound Error
#+name: class_NotFoundError
#+BEGIN_SRC python
class NotFoundError(Exception):
    str = None

    def __init__(self, str):
        self.str = str

    def __str__(self):
        return repr(self.str)

#+END_SRC


*** Error
#+name: class_Error
#+BEGIN_SRC python
class Error(Exception):
    str = None

    def __init__(self, str):
        self.str = str

    def __str__(self):
        return repr(self.str)

#+END_SRC


* Tangle                                                        :boilerplate:
#+BEGIN_SRC python :tangle custom_exceptions.py :eval no :noweb yes
<<class_AttributeRequired>>
<<class_ConstraintError>>
<<class_NotAuthorizedError>>
<<class_ArityError>>
<<class_StateError>>
<<class_NotFoundError>>
<<class_Error>>
#+END_SRC
